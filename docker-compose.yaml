services:
  front:
    build: ./front
    container_name: talentum-frontend
    ports:
      - "3000:3000"
    depends_on:
      - back
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - talentum

  back:
    build: ./back
    container_name: talentum-backend
    volumes:
      - ./back:/app
      - /app/.venv
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-development-key
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=talentum
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - ALLOWED_HOSTS=localhost,127.0.0.1,back
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://front:3000
      - AWS_ACCESS_KEY_ID=talentum
      - AWS_SECRET_ACCESS_KEY=talentum_1234
      - AWS_STORAGE_BUCKET_NAME=talentum
      - AWS_S3_ENDPOINT_URL=http://s3:9000
      - AWS_S3_CUSTOM_DOMAIN=localhost:9000/talentum
      - AWS_QUERYSTRING_AUTH=False
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - ADMIN_EMAIL=admin@example.com
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/admin/" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - talentum

  db:
    image: postgres:14
    container_name: talentum-db
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: talentum
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test -d talentum" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - talentum

  s3:
    image: minio/minio:latest
    container_name: talentum-s3
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000' # S3 API
      - '9001:9001' # Web UI
    environment:
      MINIO_ROOT_USER: talentum
      MINIO_ROOT_PASSWORD: talentum_1234
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1" ]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - minio_data:/data
    networks:
      - talentum

  s3-bucket-creator:
    image: minio/mc:latest
    container_name: talentum-s3-bucket-creator
    entrypoint: >
      /bin/sh -c "
        mc alias set talentum_s3 http://s3:9000 talentum talentum_1234;
        mc mb -p talentum_s3/talentum;
        mc anonymous set download talentum_s3/talentum
      "
    depends_on:
      s3:
        condition: service_healthy
    networks:
      - talentum

networks:
  talentum:
    name: talentum

volumes:
  minio_data:
  postgres_data: