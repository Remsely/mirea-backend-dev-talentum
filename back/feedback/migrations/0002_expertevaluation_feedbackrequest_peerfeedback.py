# Generated by Django 5.2.1 on 2025-05-14 20:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('feedback', '0001_initial'),
        ('goals', '0002_delete_selfassessment'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpertEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], verbose_name='Итоговая оценка')),
                ('comments', models.TextField(verbose_name='Комментарии и впечатления')),
                ('areas_to_improve', models.TextField(verbose_name='Зоны для роста')),
                ('created_dttm', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expert_evaluations', to='accounts.employee', verbose_name='Лидер профессии')),
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_evaluation', to='goals.goal', verbose_name='Цель')),
            ],
            options={
                'verbose_name': 'Итоговая оценка от лидера профессии',
                'verbose_name_plural': 'Итоговые оценки от лидеров профессии',
                'db_table': 'expert_evaluations',
            },
        ),
        migrations.CreateModel(
            name='FeedbackRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, verbose_name='Сообщение для рецензента')),
                ('status', models.CharField(choices=[('pending', 'Ожидает отзыва'), ('completed', 'Завершен')], default='pending', max_length=20, verbose_name='Статус')),
                ('created_dttm', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_requests', to='goals.goal', verbose_name='Цель')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_requests_created', to='accounts.employee', verbose_name='Запрошено пользователем')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_requests_to_review', to='accounts.employee', verbose_name='Рецензент')),
            ],
            options={
                'verbose_name': 'Запрос отзыва',
                'verbose_name_plural': 'Запросы отзывов',
                'db_table': 'feedback_requests',
                'unique_together': {('goal', 'reviewer')},
            },
        ),
        migrations.CreateModel(
            name='PeerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], verbose_name='Оценка')),
                ('comments', models.TextField(verbose_name='Комментарии и впечатления')),
                ('areas_to_improve', models.TextField(verbose_name='Зоны для роста')),
                ('created_dttm', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('feedback_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='feedback.feedbackrequest', verbose_name='Запрос отзыва')),
            ],
            options={
                'verbose_name': 'Отзыв коллеги',
                'verbose_name_plural': 'Отзывы коллег',
                'db_table': 'peer_feedback',
            },
        ),
    ]
